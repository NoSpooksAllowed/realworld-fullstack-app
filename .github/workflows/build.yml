name: Realworld CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend-test:
    runs-on: ubuntu-22.04

    defaults:
      run:
        working-directory: ./backend

    env:
      DATABASE_URL: postgresql://myuser:mypassword@localhost:5432/db
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
          POSTGRES_DB: db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Install dependencies
        run: npm ci
      - name: Run migrations
        run: npx prisma db push --skip-generate
      - name: Run unit-tests
        run: CI=true npm run test:ci
      - name: Run build
        run: npm run build
      - name: Start backend server and run API tests
        run: |
          npm run start &

          echo "Waiting for backend server to start..."
          sleep 5 

          # Run API tests
          ./src/test/postman/run-api-test.sh

  build-and-publish-docker-backend:
    needs: [backend-test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest
            type=sha,format=long

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/nospooksallowed/realworld-fullstack-app:backend-latest
            ghcr.io/nospooksallowed/realworld-fullstack-app:backend-${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}


  frontend-test:
    runs-on: ubuntu-22.04

    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Install Dependencies
        run: npm ci --ignore-scripts
      - name: Run tests 
        run: CI=true npm run test
      - name: Build 
        run: npm run build


  build-and-publish-docker-frontend:
    needs: [frontend-test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest
            type=sha,format=long

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/nospooksallowed/realworld-fullstack-app:frontend-latest
            ghcr.io/nospooksallowed/realworld-fullstack-app:frontend-${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}

